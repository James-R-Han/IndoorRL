# The tmux session name, has to be unique
session_name: vtr2

# Hard-coded ros IPs
environment:
  ROS_IP: 192.168.131.50
  ROS_MASTER_URI: http://192.168.131.1:11311
  PRIORITIZE: nice -n -5 ionice -c 2 -n 1

# Can run a script before tmuxp starts building the session
# before_script: /my/startup/script
shell_command_before:
  - "source ~/ASRL/venv/bin/activate"
  - "source ~/ASRL/vtr3/devel/setup.bash"
  - "source ~/ASRL/vtr3/src/vtr_navigation/vtr2_setup.bash"

# The default start directory for the full session, ./ is this file's location
start_directory: ./../../../

# Add commands to bash history
suppress_history: false

# This is where we list all the stuff we want to run
windows:
- window_name: splash
  focus: true
  panes:
  - shell_command:
    - echo "" && echo "Welcome to VTR2!" &&
      echo "The default escape key is C-a, if it asks, select screen mode." &&
      echo "We need to have a splash page to help people use this interface." && echo ""

- window_name: ros
  layout: main-horizontal
  panes:
  - roscore
  - watch -n 1 rostopic list
  - # empty pane to do ros stuff
  - # empty pane to do ros stuff

- window_name: grizzly
  layout: main-horizontal
  panes:
  - shell_command:
    - >
      SEND_COMMAND='
        CHECK_TMUX(){ echo "CHECK $1"; tmux has -t $1 2>/dev/null; };
        KILL_TMUX() { echo "KILL $1"; tmux kill-session -t $1; };
        LAUNCH_TMUX(){ echo "LAUNCH $1"; tmux new -ds $1 && tmux send -t ${1}:0 "roslaunch grizzly_bringup grizzly_start.launch" Enter ; };
        ATTACH_TMUX(){ echo "ATTACH $1"; tmux attach -t $1; };
        ( ! CHECK_TMUX ros || KILL_TMUX ros) && LAUNCH_TMUX ros && ATTACH_TMUX ros;
      '
    # - ssh -t administrator@192.168.1.11 "${SEND_COMMAND}"
  # this trap crap is so that in copy mode, when the tmux buffer fills up,
  # the program doesn't block on IO and latch on the last controller command
  - ( trap 'kill %1' SIGINT ; rosrun asrl__grizzly xbox_setup.sh >/tmp/xbox_setup.out & tail -f /tmp/xbox_setup.out )
  - ( trap 'kill %1' SIGINT ; sleep 2; roslaunch asrl__grizzly grizzly_xbox_js0.launch >/tmp/xbox_js0.out & tail -f /tmp/xbox_js0.out )
  - ssh -t administrator@192.168.131.1 "sudo service chrony restart"

- window_name: vtr2
  layout: main-horizontal
  options:
    other-pane-height: 10
  panes:
  - shell_command:
    - CUDA_DQ=$(locate */deviceQuery/deviceQuery | grep -vE "mnt|media" | head -n 1)
    - TERM=xterm-256color
    - (${CUDA_DQ} || sudo ${CUDA_DQ}) && \
    - roslaunch asrl__navigation vtr2_slim.launch robot:=grizzly scenario_params:=vtr3_development planner_type:=distance location:=utias
  - sleep 1; roslaunch asrl__navigation vtr2_pt.launch  # sleep or it complains about params
  - sleep 1; roslaunch asrl__interface UIServer.launch  # sleep or it complains about params

- window_name: robochunk
  layout: main-horizontal
  start_directory: ../robochunk/build
  panes:
  - ${PRIORITIZE} rosrun robochunk_bumblebeexb3 XB3Driver
  - rosrun robochunk_logger robochunklogger server
  - rosrun robochunk_logger robochunk_logger_gui
