# The tmux session name, has to be unique
session_name: vtr

# Hard-coded ros IPs
# environment:
#   ROS_IP: 192.168.131.50
#   ROS_MASTER_URI: http://192.168.131.50:11311
#   PRIORITIZE: nice -n -5 ionice -c 2 -n 1

# Can run a script before tmuxp starts building the session
# before_script: /my/startup/script
shell_command_before:
  - "source ~/ASRL/venv/bin/activate"
  - "source ~/ASRL/vtr3/ros2/install/setup.bash"

# The default start directory for the full session, ./ is this file's location
start_directory: ~/ASRL

# Add commands to bash history
suppress_history: false

# This is where we list all the stuff we want to run
windows:
  - window_name: vtr_main
    layout: main-horizontal
    panes:
      - ros2 launch vtr_navigation vtr.launch.py scenario_params:=playback.yaml data_dir:=~/ASRL/temp/playback override_data_dir:=true
      # - ros2 launch babelfish_robochunk_translator translator.launch
      # - ros2 launch asrl__interface Recorder.launch
      - ros2 run vtr_mission_planning vtr_mission.py --help  # TODO: for now, use this terminal to send command

  - window_name: ui # to be replaced by the web user interface
    layout: main-horizontal
    panes:
      - ros2 run vtr_mission_planning master_client_node.py
      - # sleep 2; rosrun vtr_planning client_node.py /Navigation:=/ShamNav
      - # sleep 2; rostopic list
      - # sleep 2; rosservice list
      - # remote client

  - window_name: ros_monitor
    layout: main-horizontal
    panes:
      - tmux ls # watch -n 1 rostopic list
      - tmux ls

  - window_name: grizzly
    layout: main-horizontal
    panes:
      - ros2 launch vtr_grizzly grizzly_utias_description.launch.py
