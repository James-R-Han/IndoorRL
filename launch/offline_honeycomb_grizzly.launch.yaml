## Offline LiDAR VTR3 (using datasets)
session_name: vtr_offline_honeycomb_grizzly

# environment:
#   ROS_DOMAIN_ID: "1"  # set this to a unique number when multiple ROS2 processes running on the same network

start_directory: ${VTRTEMP}

suppress_history: false

windows:
  - window_name: vtr_system
    layout: main-horizontal
    shell_command_before:
      - source ${VTRSRC}/main/install/setup.bash
    panes:
      - >
        ros2 launch vtr_navigation vtr.launch.py
        base_params:=honeycomb_grizzly_v2_default.yaml
        data_dir:=${VTRTEMP}/playback/lidar/honeycomb
        start_new_graph:=false

      - ros2 run rviz2 rviz2 -d ${VTRSRC}/rviz/lidar.rviz
      - htop # monitor hardware usage

  - window_name: vtr_gui
    layout: main-horizontal
    shell_command_before:
      - source ${VTRSRC}/main/install/setup.bash
    panes:
      - ros2 run vtr_gui socket_client  --ros-args -r __ns:=/vtr
      - ros2 run vtr_gui socket_server  --ros-args -r __ns:=/vtr
      - ros2 run vtr_gui web_server  --ros-args -r __ns:=/vtr
      # - sleep 5 && firefox --new-window "localhost:5200" # the webpage has to wait for everything above

  - window_name: grizzly
    layout: main-horizontal
    shell_command_before:
      - source ${VTRSRC}/robots/ros2/install/setup.bash
    panes:
      - ros2 launch utias_grizzly_description utias_grizzly_description.launch.py
